//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    float3  gEyePosW;                   // Offset:    0, size:   12
    float   gGameTime;                  // Offset:   12, size:    4
    float4x4 gViewProj;                 // Offset:   16, size:   64
}

cbuffer cbGrass
{
    float2  gGrassTexC[12] = { 0, 1, 1, 1, 0, 0.800000012, 1, 0.800000012, 0, 0.600000024, 1, 0.600000024, 0, 0.400000006, 1, 0.400000006, 0, 0.200000003, 1, 0.200000003, 0, 0, 1, 0 };// Offset:    0, size:  184
}

//
// 8 local object(s)
//
Texture2D gGrassTex;
Texture2D gGrassBlendTex;
Texture2D gTerrainTex;
Texture1D gRandomTex;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState samRandom
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
RasterizerState NoCull
{
    CullMode = uint(NONE /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 DrawTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- vin.PosW.x; v0.y <- vin.PosW.y; v0.z <- vin.PosW.z; 
                //   o0.x <- <DrawVS return value>.PosW.x; o0.y <- <DrawVS return value>.PosW.y; o0.z <- <DrawVS return value>.PosW.z; o0.w <- <DrawVS return value>.PosW.w
                //
                #line 93 "D:\noesisGUI\Src\Packages\Samples\Menu3D\Projects\windows_x86\shader\Grass.fx"
                mov r0.xyz, v0.xyzx  // r0.x <- vout.PosW.x; r0.y <- vout.PosW.y; r0.z <- vout.PosW.z
                
                #line 94
                mov r0.w, l(1.000000)  // r0.w <- vout.PosW.w
                
                #line 99
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 gEyePosW;                   // Offset:    0 Size:    12
                //   float gGameTime;                   // Offset:   12 Size:     4
                //   float4x4 gViewProj;                // Offset:   16 Size:    64
                //
                // }
                //
                // cbuffer cbGrass
                // {
                //
                //   float2 gGrassTexC[12];             // Offset:    0 Size:   184
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x3f4ccccd 0x00000000 0x00000000 
                //        0x3f800000 0x3f4ccccd 0x00000000 0x00000000 
                //        0x00000000 0x3f19999a 0x00000000 0x00000000 
                //        0x3f800000 0x3f19999a 0x00000000 0x00000000 
                //        0x00000000 0x3ecccccd 0x00000000 0x00000000 
                //        0x3f800000 0x3ecccccd 0x00000000 0x00000000 
                //        0x00000000 0x3e4ccccd 0x00000000 0x00000000 
                //        0x3f800000 0x3e4ccccd 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samLinear                         sampler      NA          NA             s0      1 
                // samRandom                         sampler      NA          NA             s1      1 
                // gTerrainTex                       texture  float4          2d             t0      1 
                // gRandomTex                        texture  float4          1d             t1      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbGrass                           cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Position              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_constantbuffer CB1[12], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture1d (float,float,float,float) t1
                dcl_input_siv v[1][0].xyzw, position
                dcl_temps 6
                dcl_indexableTemp x0[12], 4
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_maxout 12
                //
                // Initial variable locations:
                //   m0 <- triStream; 
                //   v[0][0].x <- gin[0].PosW.x; v[0][0].y <- gin[0].PosW.y; v[0][0].z <- gin[0].PosW.z; v[0][0].w <- gin[0].PosW.w; 
                //   x0 <- v
                //
                #line 137 "D:\noesisGUI\Src\Packages\Samples\Menu3D\Projects\windows_x86\shader\Grass.fx"
                mov r0.xyz, -v[0][0].xyzx
                add r0.xyz, r0.xyzx, cb0[0].xyzx
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x
                ge r0.x, l(150.000000), r0.x
                if_nz r0.x
                
                #line 139
                  mov r0.xz, v[0][0].xxzx  // r0.x <- PosW.x; r0.z <- PosW.z
                
                #line 141
                  add r0.w, r0.x, l(1024.000000)  // r0.w <- c
                
                #line 142
                  itof r1.x, l(-1)
                  mov r1.y, l(-1024.000000)
                  add r1.y, r0.z, r1.y
                  mul r1.x, r1.y, r1.x  // r1.x <- d
                
                #line 143
                  div r2.x, r0.w, l(2048.000000)  // r2.x <- UVoffset.x
                  div r2.y, r1.x, l(2048.000000)  // r2.y <- UVoffset.y
                
                #line 144
                  itof r0.w, l(0)
                  sample_l_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t0.yzwx, s0, r0.w
                  mov r1.x, l(-20.000000)
                  add r0.y, r0.w, r1.x  // r0.y <- y
                
                #line 145
                  mov r0.y, r0.y  // r0.y <- PosW.y
                
                #line 147
                  div r0.w, cb0[0].w, l(10.000000)  // r0.w <- time
                
                #line 150
                  mul r1.x, r2.y, r2.x
                  itof r1.y, l(0)
                  sample_l_indexable(texture1d)(float,float,float,float) r1.xyz, r1.x, t1.xyzw, s1, r1.y  // r1.x <- randomRGB.x; r1.y <- randomRGB.y; r1.z <- randomRGB.z
                
                #line 151
                  add r1.w, r1.z, r1.x
                  add r1.y, r1.y, r1.w
                  sincos r1.y, null, r1.y
                  mov r1.w, -r1.y
                  max r1.y, r1.w, r1.y  // r1.y <- random
                
                #line 153
                  mov r1.w, l(0)  // r1.w <- windCoEff
                
                #line 154
                  mul r2.x, r0.w, r1.x
                  mul r2.x, r2.x, l(3.140000)
                  itof r2.y, l(5)
                  mul r2.x, r2.y, r2.x
                  sincos r2.x, null, r2.x  // r2.x <- wind.x
                  mul r2.y, r0.w, r1.z
                  mul r2.y, r2.y, l(3.140000)
                  itof r2.z, l(5)
                  mul r2.y, r2.z, r2.y
                  sincos r2.y, null, r2.y  // r2.y <- wind.y
                
                #line 155
                  add r3.x, r1.x, r2.x  // r3.x <- wind.x
                
                #line 156
                  add r3.y, r1.z, r2.y  // r3.y <- wind.y
                
                #line 157
                  mov r1.x, -r1.y
                  add r1.x, r1.x, l(1.000000)
                  mov r1.z, l(-0.700000)
                  add r1.z, r1.z, l(1.000000)
                  mul r1.x, r1.z, r1.x
                  add r1.x, r1.x, l(0.700000)
                  mul r1.xz, r1.xxxx, r3.xxyx  // r1.x <- wind.x; r1.z <- wind.y
                
                #line 159
                  mov r2.x, l(2.500000)  // r2.x <- oscillationStrength
                
                #line 160
                  mov r1.y, r1.y  // r1.y <- sinSkewCoeff
                
                #line 161
                  mul r0.w, r0.w, r2.x
                  add r0.w, r1.y, r0.w
                  sincos r0.w, null, r0.w
                  add r0.w, r0.w, l(1.000000)
                  itof r2.x, l(2)
                  div r0.w, r0.w, r2.x  // r0.w <- lerpCoeff
                
                #line 162
                  mul r2.xy, r1.xzxx, l(0.950000, 0.950000, 0.000000, 0.000000)  // r2.x <- leftWindBound.x; r2.y <- leftWindBound.y
                
                #line 163
                  mul r1.xz, r1.xxzx, l(1.050000, 0.000000, 1.050000, 0.000000)  // r1.x <- rightWindBound.x; r1.z <- rightWindBound.y
                
                #line 165
                  mov r2.zw, -r2.xxxy
                  add r1.xz, r1.xxzx, r2.zzwz
                  mul r1.xz, r0.wwww, r1.xxzx
                  add r1.xz, r1.xxzx, r2.xxyx  // r1.x <- wind.x; r1.z <- wind.y
                
                #line 167
                  mov r0.w, l(3.140000)
                  add r0.w, r0.w, l(3.140000)
                  mul r0.w, r0.w, r1.y
                  add r0.w, r0.w, l(-3.140000)  // r0.w <- randomAngle
                
                #line 168
                  itof r2.x, l(0)
                  mov r2.y, -r2.x
                  add r2.y, r2.y, l(1.000000)
                  mul r1.y, r1.y, r2.y
                  add r1.y, r1.y, r2.x  // r1.y <- randomMagnitude
                
                #line 169
                  sincos r2.x, null, r0.w  // r2.x <- randomWindDir.x
                  sincos null, r2.y, r0.w  // r2.y <- randomWindDir.y
                
                #line 170
                  mul r2.xy, r1.yyyy, r2.xyxx
                  add r1.xy, r1.xzxx, r2.xyxx  // r1.y <- wind.y
                
                #line 172
                  dp2 r0.w, r1.xyxx, r1.xyxx
                  sqrt r0.w, r0.w  // r0.w <- windForce
                
                #line 176
                  mov r2.xyz, -v[0][0].xyzx
                  add r2.xyz, r2.xyzx, cb0[0].xyzx
                  dp3 r1.z, r2.xyzx, r2.xyzx
                  rsq r1.z, r1.z
                  mul r2.xy, r1.zzzz, r2.zxzz  // r2.x <- look.z; r2.y <- look.x
                
                #line 177
                  mov r2.z, l(0)
                  dp3 r1.z, r2.xyzx, r2.xyzx
                  rsq r1.z, r1.z
                  mul r2.xyz, r1.zzzz, r2.xyzx  // r2.z <- look.y
                
                #line 178
                  itof r3.xyz, l(0, 0, 1, 0)
                  mul r4.xyz, r2.xyzx, r3.zxyz
                  mul r3.xyz, r2.zxyz, r3.xyzx
                  mov r3.xyz, -r3.xyzx
                  add r3.xyz, r3.xyzx, r4.xyzx
                  dp3 r1.z, r3.xyzx, r3.xyzx
                  rsq r1.z, r1.z
                  mul r3.xyz, r1.zzzz, r3.xyzx  // r3.x <- right.x; r3.y <- right.y; r3.z <- right.z
                
                #line 179
                  mul r4.xyz, r2.zxyz, r3.zxyz
                  mul r2.xyz, r2.xyzx, r3.yzxy
                  mov r2.xyz, -r2.xyzx
                  add r2.xyz, r2.xyzx, r4.xyzx  // r2.x <- up.x; r2.y <- up.y; r2.z <- up.z
                
                #line 183
                  mov r1.z, l(1.000000)  // r1.z <- HalfWidth
                
                #line 184
                  itof r2.w, l(8)
                  mul r2.w, r1.z, r2.w  // r2.w <- PerHeight
                
                #line 187
                  mul r2.xyz, r2.xyzx, r2.wwww  // r2.x <- Height.x; r2.y <- Height.y; r2.z <- Height.z
                
                #line 188
                  mul r3.xyz, r3.xyzx, r1.zzzz  // r3.x <- Width.x; r3.y <- Width.y; r3.z <- Width.z
                
                #line 191
                  mov r4.xyz, -r3.xyzx
                  add r4.xyz, r0.xyzx, r4.xyzx
                  itof r5.xyz, l(0, 0, 0, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[0].xyzw, r4.xyzw
                
                #line 192
                  mul r4.xy, r1.wwww, r1.xyxx
                  mov r4.zw, x0[0].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[0].xz, r4.xxyx
                
                #line 193
                  mul r1.z, r1.w, r0.w
                  mul r1.z, r1.z, l(0.800000)
                  mov r2.w, x0[0].y
                  mov r1.z, -r1.z
                  add r1.z, r1.z, r2.w
                  mov x0[0].y, r1.z
                
                #line 194
                  add r4.xyz, r0.xyzx, r3.xyzx
                  itof r5.xyz, l(0, 0, 0, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[1].xyzw, r4.xyzw
                
                #line 195
                  mul r4.xy, r1.wwww, r1.xyxx
                  mov r4.zw, x0[1].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[1].xz, r4.xxyx
                
                #line 196
                  mul r1.z, r1.w, r0.w
                  mul r1.z, r1.z, l(0.800000)
                  mov r2.w, x0[1].y
                  mov r1.z, -r1.z
                  add r1.z, r1.z, r2.w
                  mov x0[1].y, r1.z
                
                #line 197
                  itof r1.z, l(1)
                  mov r2.w, -cb1[0].y
                  add r1.z, r1.z, r2.w
                  add r1.z, r1.z, r1.w  // r1.z <- windCoEff
                
                #line 199
                  mov r4.xyz, -r3.xyzx
                  add r4.xyz, r0.xyzx, r4.xyzx
                  itof r5.xyz, l(1, 1, 1, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[2].xyzw, r4.xyzw
                
                #line 200
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[2].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[2].xz, r4.xxyx
                
                #line 201
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[2].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[2].y, r1.w
                
                #line 202
                  add r4.xyz, r0.xyzx, r3.xyzx
                  itof r5.xyz, l(1, 1, 1, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[3].xyzw, r4.xyzw
                
                #line 203
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[3].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[3].xz, r4.xxyx
                
                #line 204
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[3].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[3].y, r1.w
                
                #line 205
                  itof r1.w, l(1)
                  mov r2.w, -cb1[2].y
                  add r1.w, r1.w, r2.w
                  add r1.z, r1.w, r1.z
                
                #line 207
                  mov r4.xyz, -r3.xyzx
                  add r4.xyz, r0.xyzx, r4.xyzx
                  itof r5.xyz, l(2, 2, 2, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[4].xyzw, r4.xyzw
                
                #line 208
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[4].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[4].xz, r4.xxyx
                
                #line 209
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[4].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[4].y, r1.w
                
                #line 210
                  add r4.xyz, r0.xyzx, r3.xyzx
                  itof r5.xyz, l(2, 2, 2, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[5].xyzw, r4.xyzw
                
                #line 211
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[5].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[5].xz, r4.xxyx
                
                #line 212
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[5].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[5].y, r1.w
                
                #line 213
                  itof r1.w, l(1)
                  mov r2.w, -cb1[4].y
                  add r1.w, r1.w, r2.w
                  add r1.z, r1.w, r1.z
                
                #line 215
                  mov r4.xyz, -r3.xyzx
                  add r4.xyz, r0.xyzx, r4.xyzx
                  itof r5.xyz, l(3, 3, 3, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[6].xyzw, r4.xyzw
                
                #line 216
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[6].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[6].xz, r4.xxyx
                
                #line 217
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[6].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[6].y, r1.w
                
                #line 218
                  add r4.xyz, r0.xyzx, r3.xyzx
                  itof r5.xyz, l(3, 3, 3, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[7].xyzw, r4.xyzw
                
                #line 219
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[7].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[7].xz, r4.xxyx
                
                #line 220
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[7].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[7].y, r1.w
                
                #line 221
                  itof r1.w, l(1)
                  mov r2.w, -cb1[6].y
                  add r1.w, r1.w, r2.w
                  add r1.z, r1.w, r1.z
                
                #line 223
                  mov r4.xyz, -r3.xyzx
                  add r4.xyz, r0.xyzx, r4.xyzx
                  itof r5.xyz, l(4, 4, 4, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[8].xyzw, r4.xyzw
                
                #line 224
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[8].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[8].xz, r4.xxyx
                
                #line 225
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[8].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[8].y, r1.w
                
                #line 226
                  add r4.xyz, r0.xyzx, r3.xyzx
                  itof r5.xyz, l(4, 4, 4, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[9].xyzw, r4.xyzw
                
                #line 227
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[9].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[9].xz, r4.xxyx
                
                #line 228
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[9].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[9].y, r1.w
                
                #line 229
                  itof r1.w, l(1)
                  mov r2.w, -cb1[8].y
                  add r1.w, r1.w, r2.w
                  add r1.z, r1.w, r1.z
                
                #line 231
                  mov r4.xyz, -r3.xyzx
                  add r4.xyz, r0.xyzx, r4.xyzx
                  itof r5.xyz, l(5, 5, 5, 0)
                  mul r5.xyz, r2.xyzx, r5.xyzx
                  add r4.xyz, r4.xyzx, r5.xyzx
                  mov r4.w, l(1.000000)
                  mov x0[10].xyzw, r4.xyzw
                
                #line 232
                  mul r4.xy, r1.zzzz, r1.xyxx
                  mov r4.zw, x0[10].xxxz
                  add r4.xy, r4.xyxx, r4.zwzz
                  mov x0[10].xz, r4.xxyx
                
                #line 233
                  mul r1.w, r0.w, r1.z
                  mul r1.w, r1.w, l(0.800000)
                  mov r2.w, x0[10].y
                  mov r1.w, -r1.w
                  add r1.w, r1.w, r2.w
                  mov x0[10].y, r1.w
                
                #line 234
                  add r0.xyz, r0.xyzx, r3.xyzx
                  itof r3.xyz, l(5, 5, 5, 0)
                  mul r2.xyz, r2.xyzx, r3.xyzx
                  add r2.xyz, r0.xyzx, r2.xyzx
                  mov r2.w, l(1.000000)
                  mov x0[11].xyzw, r2.xyzw
                
                #line 235
                  mul r0.xy, r1.zzzz, r1.xyxx
                  mov r1.xy, x0[11].xzxx
                  add r0.xy, r0.xyxx, r1.xyxx
                  mov x0[11].xz, r0.xxyx
                
                #line 236
                  mul r0.x, r0.w, r1.z
                  mul r0.x, r0.x, l(0.800000)
                  mov r0.y, x0[11].y
                  mov r0.x, -r0.x
                  add r0.x, r0.x, r0.y
                  mov x0[11].y, r0.x
                
                #line 249
                  mov r0.xyzw, x0[0].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw  // r1.x <- gout.PosH.x
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw  // r1.y <- gout.PosH.y
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw  // r1.z <- gout.PosH.z
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw  // r1.w <- gout.PosH.w
                
                #line 250
                  mov r0.xy, cb1[0].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[1].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[1].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[2].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[2].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[3].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[3].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[4].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[4].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[5].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[5].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[6].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[6].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[7].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[7].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[8].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[8].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[9].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[9].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[10].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[10].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 249
                  mov r0.xyzw, x0[11].xyzw
                  dp4 r1.x, r0.xyzw, cb0[1].xyzw
                  dp4 r1.y, r0.xyzw, cb0[2].xyzw
                  dp4 r1.z, r0.xyzw, cb0[3].xyzw
                  dp4 r1.w, r0.xyzw, cb0[4].xyzw
                
                #line 250
                  mov r0.xy, cb1[11].xyxx  // r0.x <- gout.Tex.x; r0.y <- gout.Tex.y
                
                #line 251
                  mov o0.xyzw, r1.xyzw
                  mov o1.xy, r0.xyxx
                  emit_stream m0
                
                #line 253
                endif 
                
                #line 254
                ret 
                // Approximately 431 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samLinear                         sampler      NA          NA             s0      1 
                // samAnisotropic                    sampler      NA          NA             s1      1 
                // gGrassTex                         texture  float4          2d             t0      1 
                // gGrassBlendTex                    texture  float4          2d             t1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Position              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.Tex.x; v1.y <- pin.Tex.y; 
                //   o0.x <- <DrawPS return value>.x; o0.y <- <DrawPS return value>.y; o0.z <- <DrawPS return value>.z; o0.w <- <DrawPS return value>.w
                //
                #line 258 "D:\noesisGUI\Src\Packages\Samples\Menu3D\Projects\windows_x86\shader\Grass.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w
                
                #line 259
                sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t1.xyzw, s1
                mov r1.y, l(-0.100000)
                add r1.x, r1.y, r1.x
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard_nz r1.x
                
                #line 260
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
            RasterizerState = NoCull;
        }

    }

}

