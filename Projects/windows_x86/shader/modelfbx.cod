//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer BufferMatrix
{
    float4x4 g_matWorldViewProj;        // Offset:    0, size:   64
}

//
// 2 local object(s)
//
Texture2D g_Texture1[2];
SamplerState g_SampleType
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    AddressW = uint(WRAP /* 1 */);
    MipLODBias = float(0);
    MaxAnisotropy = uint(1);
    ComparisonFunc = uint(ALWAYS /* 8 */);
    MinLOD   = float(0);
    MaxLOD   = float(3.40282347e+038);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ShaderTec
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer BufferMatrix
                // {
                //
                //   float4x4 g_matWorldViewProj;       // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // BufferMatrix                      cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyzw        0     NONE   float   xyz 
                // NORMAL                   0   xyzw        1     NONE   float       
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
                //   v1.x <- input.normal.x; v1.y <- input.normal.y; v1.z <- input.normal.z; v1.w <- input.normal.w; 
                //   v2.x <- input.texCoord0.x; v2.y <- input.texCoord0.y; 
                //   o1.x <- <ShaderVS return value>.texCoord0.x; o1.y <- <ShaderVS return value>.texCoord0.y; 
                //   o0.x <- <ShaderVS return value>.position.x; o0.y <- <ShaderVS return value>.position.y; o0.z <- <ShaderVS return value>.position.z; o0.w <- <ShaderVS return value>.position.w
                //
                #line 49 "D:\noesisGUI\Src\Packages\Samples\Menu3D\Projects\windows_x86\shader\modelfbx.fx"
                mov r0.w, l(1.000000)  // r0.w <- input.position.w
                
                #line 52
                mov r0.xyz, v0.xyzx
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- output.position.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- output.position.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- output.position.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- output.position.w
                
                #line 55
                mov r0.xy, v2.xyxx  // r0.x <- output.texCoord0.x; r0.y <- output.texCoord0.y
                
                #line 57
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r0.xyxx
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // g_SampleType                      sampler      NA          NA             s0      1 
                // g_Texture1[0]                     texture  float4          2d             t0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
                //   v1.x <- input.texCoord0.x; v1.y <- input.texCoord0.y; 
                //   o0.x <- <ShaderPS return value>.x; o0.y <- <ShaderPS return value>.y; o0.z <- <ShaderPS return value>.z; o0.w <- <ShaderPS return value>.w
                //
                #line 63 "D:\noesisGUI\Src\Packages\Samples\Menu3D\Projects\windows_x86\shader\modelfbx.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- outputColor0.x; r0.y <- outputColor0.y; r0.z <- outputColor0.z; r0.w <- outputColor0.w
                
                #line 65
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

